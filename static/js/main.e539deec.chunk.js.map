{"version":3,"sources":["UserApi.js","UserContext.js","SessionStorageApi.js","utils/useForm.js","routes/account/components/UpdateAccount.js","MessageApi.js","routes/message/Message.js","routes/buy/InventoryItem.js","routes/buy/InventoryItemPreview.js","routes/account/components/Account.js","routes/account/components/Login.js","routes/account/components/AccountManager.js","routes/home/components/HomeWelcome.js","routes/home/components/Home.js","routes/home/components/HomeManager.js","routes/buy/Inventory.js","routes/buy/CategoryManager.js","routes/buy/BuyManager.js","routes/account/components/CreateAccount.js","InventoryItemApi.js","routes/sell/Sell.js","App.js","index.js"],"names":["API","UserContext","createContext","saveUserToSessionStorage","authorizedUser","a","user","sessionStorage","setItem","JSON","stringify","console","error","removeUserFromSessionStorage","clear","getUserFromSessionStorage","userFromSessionStorage","getItem","parse","createUser","userInfo","profilePic","FormData","newUser","append","username","toLowerCase","trim","password","firstName","lastName","email","phone","Date","now","userBio","streetAddress","city","state","zipCode","Axios","post","then","response","log","data","final","loginUser","get","updateUser","updatedUser","userId","size","delete","catch","err","patch","responseData","deleteUser","usernameInput","passwordInput","useForm","initialState","useState","setState","altState","setaltState","e","persist","target","name","value","UpdateAccount","setisUpdating","useContext","setAuthorizedUser","isDeleted","setIsDeleted","setprofilePic","values","handleChange","updateAccount","preventDefault","className","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","onSubmit","htmlFor","multiple","type","accept","onChange","Event","file","files","placeholder","required","onClick","sendNewMessage","senderUserId","recieverUserId","itemId","messageBody","newMessage","messageId","Math","random","returnValue","getMessages","Message","displayedComponent","setmessageBody","messagesFromApi","setMessagesFromApi","initMessages","submitNewMessage","displayedPreviousMessages","map","message","push","key","useEffect","InventoryItem","item","singleOrMultiple","layout","inventoryItem","setisItemPreview","messaging","setMessaging","itemsInStock","itemYearCreated","itemMake","itemModel","itemPrice","itemLocation","itemDescription","alert","itemName","itemUserId","itemPic","height","InventoryItemPreview","isItemPreview","_id","Account","view","isUpdating","isLoading","setisLoading","inventoryItems","setinventoryItems","fetch","json","displayedUser","items","undefined","length","src","alt","href","publicInfo","Login","login","loginStatus","AccountManager","displayedAccountPage","HomeWelcome","displayedWelcome","Home","HomeManager","Inventory","category","americanFlagPic","CategoryManager","selectedCategory","setselectedCategory","BuyManager","CreateAccount","register","createStatus","createAccountForm","createNewInventoryItem","itemInfo","itemCategory","itemImage","newItem","itemPartNumber","Sell","setItemCategory","initialValues","itemPicture","setItemPicture","id","App","navIsOpen","setNavIsOpen","userProvider","useMemo","userFromServer","getUserFromStorage","setTimeout","to","Provider","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e539deec.chunk.js","sourcesContent":["import Axios from \"axios\";\n\nimport {\n  saveUserToSessionStorage,\n  removeUserFromSessionStorage,\n} from \"./SessionStorageApi\";\n\nconst ENVIROMENT_OPTIONS = {\n  HEROKU: \"heroku\",\n  LOCAL: \"local\",\n};\n\n// SET DEVELOPMENT ENVIROMENT HERE\nconst ENVIROMENT = ENVIROMENT_OPTIONS.LOCAL;\nexport let API;\nif (ENVIROMENT === \"local\") {\n  API = \"http://localhost:3001\";\n} else if (ENVIROMENT === \"heroku\") {\n  API = \"https://react-store-node-api.herokuapp.com\";\n}\n\n// these functions should contact the react-store-node-api and verify user credentials.\n\n// create user\nexport const createUser = async (userInfo, profilePic) => {\n  try {\n    const newUser = await new FormData();\n    newUser.append(\"username\", userInfo.username.toLowerCase().trim());\n    newUser.append(\"password\", userInfo.password.trim());\n    newUser.append(\"firstName\", userInfo.firstName.toLowerCase().trim());\n    newUser.append(\"lastName\", userInfo.lastName.toLowerCase().trim());\n    newUser.append(\"email\", userInfo.email.toLowerCase().trim());\n    newUser.append(\"phone\", userInfo.phone);\n    newUser.append(\"userId\", Date.now());\n    newUser.append(\"userBio\", userInfo.userBio.toLowerCase().trim());\n    newUser.append(\n      \"streetAddress\",\n      userInfo.streetAddress.toLowerCase().trim()\n    );\n    newUser.append(\"city\", userInfo.city.toLowerCase().trim());\n    newUser.append(\"state\", userInfo.state.toLowerCase().trim());\n    newUser.append(\"zipCode\", userInfo.zipCode.toLowerCase().trim());\n    newUser.append(\"profilePic\", profilePic);\n    let final;\n    await Axios.post(`${API}/users`, await newUser).then(async (response) => {\n      console.log(response);\n      final = await response.data;\n    });\n    await saveUserToSessionStorage(final);\n    return final;\n  } catch (error) {\n    return console.log(\"UserApi create user error\");\n  }\n};\n\n// login user\nexport const loginUser = async (userInfo) => {\n  try {\n    let final;\n    await Axios.get(\n      `${API}/users/login/${userInfo.username\n        .toLowerCase()\n        .trim()}/${userInfo.password.toLowerCase().trim()}`\n    ).then(async (response) => {\n      //   console.log(response);\n      final = await response.data;\n    });\n    await saveUserToSessionStorage(final);\n    return final;\n  } catch (error) {\n    console.log(\"loginUserApi error\");\n  }\n};\n\n// update user\nexport const updateUser = async (userInfo, profilePic) => {\n  const updatedUser = await new FormData();\n  updatedUser.append(\"username\", userInfo.username.toLowerCase().trim());\n  updatedUser.append(\"password\", userInfo.password.trim());\n  updatedUser.append(\"firstName\", userInfo.firstName.toLowerCase().trim());\n  updatedUser.append(\"lastName\", userInfo.lastName.toLowerCase().trim());\n  updatedUser.append(\"email\", userInfo.email.toLowerCase().trim());\n  updatedUser.append(\"phone\", userInfo.phone);\n  updatedUser.append(\"userId\", userInfo.userId);\n  updatedUser.append(\"userBio\", userInfo.userBio.toLowerCase().trim());\n  updatedUser.append(\"city\", userInfo.city.toLowerCase().trim());\n  updatedUser.append(\"state\", userInfo.state.toLowerCase().trim());\n  updatedUser.append(\"zipCode\", userInfo.zipCode.toLowerCase().trim());\n\n  // COMPLETE FUNCTION BELOW NEEDS TO BE REFACTORED.\n\n  try {\n    if (profilePic && profilePic.size < 800000) {\n      try {\n        await Axios.delete(`${API}/users/deleteProfilePic/${userInfo.userId}`)\n          .then(async (response) => {\n            await response;\n          })\n          .catch((err) => console.log(err));\n        updatedUser.append(\"profilePic\", profilePic);\n      } catch (error) {\n        console.log(\"delete image error\");\n      }\n    } else if (profilePic && profilePic.size > 800000) {\n      return console.log(\"profile pic is top large\");\n    }\n    try {\n      let responseData;\n      await Axios.patch(\n        `${API}/users/updateUser/${userInfo.username.toLowerCase().trim()}`,\n        updatedUser\n      )\n        .then((data) => {\n          responseData = data.data;\n          console.log(responseData);\n        })\n        .catch((err) => console.log(err));\n      return responseData;\n    } catch (error) {\n      console.log(\"update user error\");\n    }\n  } catch (error) {\n    return console.log(`updateUser function error -> ${error}`);\n  }\n};\n// delete user\nexport const deleteUser = async (usernameInput, passwordInput) => {\n  try {\n    Axios.delete(`${API}/users/delete/${usernameInput}/${passwordInput}`).then(\n      async (response) => {\n        console.log(response);\n        await removeUserFromSessionStorage(usernameInput);\n        return response;\n      }\n    );\n  } catch (error) {\n    console.log(\"DeleteUserApi error\");\n  }\n};\n\n// check if the users account already exists,\n// check by email is already accosicated with a account,\n// than check if the username is already taken.\nexport const checkIfAccountAlreadyExists = async () => {\n  console.log(\"checking if count already exists.\");\n};\n\n// user model below\n// username: {\n//     type: String,\n//     required: true,\n//   },\n//   password: {\n//     type: String,\n//     required: true,\n//   },\n//   firstName: {\n//     type: String,\n//     required: false,\n//   },\n//   lastName: {\n//     type: String,\n//     required: false,\n//   },\n//   email: {\n//     type: String,\n//     required: false,\n//   },\n//   phone: {\n//     type: Number,\n//     required: true,\n//   },\n//   userId: {\n//     type: String,\n//     required: true,\n//   },\n//   createdOn: {\n//     type: Date,\n//     required: true,\n//     default: Date.now(),\n//   },\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);\n","// save and remove users from session storage.\n\n// save a user to session storage\nexport const saveUserToSessionStorage = async (authorizedUser) => {\n  try {\n    const user = await authorizedUser;\n    if (user) {\n      // console.log(\"User saved to session storage\");\n      return sessionStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      return console.error(\"No user to save in session storage\");\n    }\n  } catch (error) {\n    return console.error(\"Could not save user in session storage\");\n  }\n};\n\n// removes a user from session user\nexport const removeUserFromSessionStorage = async (authorizedUser) => {\n  try {\n    const user = await authorizedUser;\n    if (user) {\n      // console.log(\"User cleared from session storage\");\n      return sessionStorage.clear(\"user\");\n    } else {\n      return console.error(\"Could not find user to remove in session storage\");\n    }\n  } catch (error) {\n    return console.error(\"Could not clear session storage\");\n  }\n};\n\n// checks if there is a user in session storage\n// returns user if there is.\nexport const getUserFromSessionStorage = async () => {\n  try {\n    const userFromSessionStorage = sessionStorage.getItem(\"user\");\n    if (userFromSessionStorage) {\n      //   console.log(userFromSessionStorage);\n      // console.log(\"User Was Found in Session storage\");\n      return JSON.parse(userFromSessionStorage);\n    } else {\n      // console.error(\"No user found in session storage\");\n    }\n  } catch (error) {\n    console.error(\"Could not get user from session storage \");\n  }\n};\n","import { useState } from \"react\";\n\nconst useForm = (initialState) => {\n  const [state, setState] = useState({});\n  const [altState, setaltState] = useState(initialState);\n  //   const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     submitCallback();\n  //   };\n\n  const handleChange = (e) => {\n    e.persist();\n    setState((state) => ({ ...state, [e.target.name]: e.target.value }));\n  };\n\n  const handleChangeWithInitialState = (e) => {\n    e.persist();\n    setaltState((altState) => ({\n      ...altState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  if (initialState) {\n    return [altState, handleChangeWithInitialState];\n  } else {\n    return [state, handleChange];\n  }\n};\n\nexport default useForm;\n","import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../../../UserContext\";\nimport { deleteUser } from \"../../../UserApi\";\nimport { updateUser } from \"../../../UserApi\";\n// import { API } from \"../../../UserApi\";\n// import { saveUserToSessionStorage } from \"../../../SessionStorageApi\";\nimport useForm from \"../../../utils/useForm\";\nimport \"../styles/updateAccount.css\";\n// import Axios from \"axios\";\nexport default function UpdateAccount({ setisUpdating }) {\n  const { authorizedUser, setAuthorizedUser } = useContext(UserContext);\n\n  const [isDeleted, setIsDeleted] = useState(0);\n\n  const checkDeleteConfirm = () => {\n    // check and delete if confirmed\n    if (isDeleted > 0) {\n      deleteUser(authorizedUser.username, authorizedUser.password);\n      return setAuthorizedUser(null);\n    } else {\n      return setIsDeleted(isDeleted + 1);\n    }\n  };\n  const [profilePic, setprofilePic] = useState(null);\n\n  const initialState = {\n    username: authorizedUser.username,\n    password: authorizedUser.password,\n    firstName: authorizedUser.firstName,\n    lastName: authorizedUser.lastName,\n    email: authorizedUser.email,\n    phone: authorizedUser.phone,\n    userBio: authorizedUser.userBio,\n    streetAddress: authorizedUser.streetAddress,\n    city: authorizedUser.city,\n    state: authorizedUser.state,\n    zipCode: authorizedUser.zipCode,\n    userId: authorizedUser.userId,\n  };\n\n  const [values, handleChange] = useForm(initialState);\n\n  // const [updatedUser, setUpdatedUser] = useState(authorizedUser);\n  const updateAccount = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await updateUser(values, profilePic);\n      // below is currently working\n      await setAuthorizedUser(values);\n      console.log(`update account -> ${response.firstName}`);\n    } catch (error) {\n      console.log(`update account js error ${error}`);\n    }\n  };\n\n  return (\n    <div\n      className=\"flex flex-col justify-center text-white text-center align-center p-4 text-xl \"\n      style={{\n        backgroundImage:\n          \"url(\" +\n          \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" +\n          \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <form\n        className=\"flex flex-col text-center text-2xl \"\n        onSubmit={updateAccount}\n      >\n        <h1 className=\"text-4xl font-bold\">Update Account</h1>\n        <br />\n        <label htmlFor=\"profilePic\">Profile picture</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          name=\"profilePic\"\n          multiple\n          type=\"file\"\n          accept=\".jpg\"\n          onChange={(Event) => {\n            const file = Event.target.files[0];\n            setprofilePic(file);\n          }}\n        ></input>\n        <br />\n        <label htmlFor=\"username\">Username</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"username\"\n          name=\"username\"\n          value={values.username || \"\"}\n          placeholder={authorizedUser.username}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"password\"\n          name=\"password\"\n          value={values.password || \"\"}\n          placeholder={authorizedUser.password}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"firstName\">FirstName</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"firstName\"\n          name=\"firstName\"\n          value={values.firstName || \"\"}\n          placeholder={authorizedUser.firstName}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"lastName\">LastName</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"lastName\"\n          name=\"lastName\"\n          value={values.lastName || \"\"}\n          placeholder={authorizedUser.lastName}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"email\"\n          name=\"email\"\n          value={values.email || \"\"}\n          placeholder={authorizedUser.email}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"phone\">Phone</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"phone\"\n          name=\"phone\"\n          value={values.phone || \"\"}\n          placeholder={authorizedUser.phone}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"userBio\">Bio</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"userBio\"\n          name=\"userBio\"\n          value={values.userBio || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <label htmlFor=\"streetAddress\">Street Address</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"streetAddress\"\n          name=\"streetAddress\"\n          value={values.streetAddress || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <label htmlFor=\"city\">City</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"city\"\n          name=\"city\"\n          value={values.city || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <label htmlFor=\"state\">State</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"state\"\n          name=\"state\"\n          value={values.state || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <label htmlFor=\"zipCode\">Zip</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"zipCode\"\n          name=\"zipCode\"\n          value={values.zipCode || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          className=\"bg-blue-500 p-1 rounded\"\n          type=\"submit\"\n          value=\"Save Changes\"\n        ></input>\n        <br />\n        <input\n          className=\"bg-white text-black p-1 rounded\"\n          type=\"button\"\n          value=\"Cancel\"\n          onClick={() => {\n            setisUpdating(false);\n          }}\n        ></input>\n        <br />\n        <input\n          className=\"bg-red-600 p-1 rounded\"\n          value=\"Click twice to delete account\"\n          type=\"button\"\n          onClick={() => {\n            checkDeleteConfirm();\n          }}\n        ></input>\n      </form>\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport { API } from \"./UserApi\";\n\n// NEED TO BE UPDATED FOR MESSAGES\nexport const sendNewMessage = async (\n  senderUserId,\n  recieverUserId,\n  itemId,\n  messageBody\n) => {\n  const newMessage = {\n    senderUserId: senderUserId,\n    recieverUserId: recieverUserId,\n    itemId: itemId,\n    messageBody: messageBody,\n    messageId: Math.random(),\n  };\n\n  let returnValue;\n  try {\n    await Axios.post(\n      `${API}/messages/sendNewMessage/${senderUserId}/${recieverUserId}`,\n      newMessage\n    ).then(async (response) => {\n      console.log(response);\n      returnValue = await response.data;\n    });\n    return returnValue;\n  } catch (error) {\n    return console.log(\"Message api create new message error\");\n  }\n};\n\nexport const getMessages = async (senderUserId, recieverUserId, itemId) => {\n  let returnValue;\n  try {\n    await Axios.get(\n      `${API}/messages/getPreviousMessages/${senderUserId}/${recieverUserId}/${itemId}`\n    ).then(async (response) => {\n      console.log(response);\n      returnValue = await response.data;\n    });\n    return returnValue;\n  } catch (error) {\n    return console.log(\"Message api get messages error\");\n  }\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport { sendNewMessage, getMessages } from \"../../MessageApi\";\nexport default function Message({ recieverUserId, itemId }) {\n  const { authorizedUser } = useContext(UserContext);\n  const [messageBody, setmessageBody] = useState(null);\n  const [messagesFromApi, setMessagesFromApi] = useState(null);\n\n  let initMessages = async () => {\n    let messagesFromApi = await getMessages(\n      authorizedUser.userId,\n      recieverUserId,\n      itemId\n    );\n    setMessagesFromApi(messagesFromApi);\n  };\n\n  let submitNewMessage = async (e) => {\n    e.preventDefault();\n    if (messageBody) {\n      await sendNewMessage(\n        authorizedUser.userId,\n        recieverUserId,\n        itemId,\n        messageBody\n      );\n      initMessages();\n    } else {\n      console.log(\"message body is empty.\");\n    }\n  };\n  // should change css based on who is viewing the messages and who is sending them.\n  // needs to map through messages and sort them by date and then display them to the user.\n  let displayedPreviousMessages = [];\n  if (messagesFromApi) {\n    messagesFromApi.map((message) => {\n      return displayedPreviousMessages.push(\n        <h1 key={message.messageId}>{message.messageBody}</h1>\n      );\n    });\n  } else {\n    displayedPreviousMessages = <h1>Loading comments</h1>;\n  }\n\n  useEffect(() => {\n    let initMessages = async () => {\n      let messagesFromApi = await getMessages(\n        authorizedUser.userId,\n        recieverUserId,\n        itemId\n      );\n      setMessagesFromApi(messagesFromApi);\n    };\n    initMessages();\n  }, [authorizedUser.userId, recieverUserId, itemId]);\n\n  let displayedComponent;\n  if (authorizedUser && authorizedUser.userId !== recieverUserId) {\n    displayedComponent = (\n      <div>\n        <div>\n          {/* <h1>Sender = {authorizedUser.username}</h1>\n          <h1>Seller id = {recieverUserId}</h1> */}\n          {displayedPreviousMessages}\n        </div>\n        <div>\n          <form\n            className=\"flex flex-col bg-gray-350 rounded \"\n            onSubmit={submitNewMessage}\n          >\n            {/* <label htmlFor=\"messageBodyInput\">Send new message</label> */}\n            <input\n              className=\"flex flex-col bg-gray-550 m-1 p-1 rounded text-black\"\n              type=\"text\"\n              name=\"messageBodyInput\"\n              onChange={(e) => {\n                setmessageBody(e.target.value);\n              }}\n            />\n            <input\n              className=\"flex flex-col bg-gray-500 m-1 p-1 rounded \"\n              type=\"submit\"\n              value=\"Send\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  } else if (authorizedUser && authorizedUser.userId === recieverUserId) {\n    displayedComponent = (\n      <div>\n        <h1>This is your listing, You can't message yourself :)</h1>\n      </div>\n    );\n  } else {\n    displayedComponent = <h1>Please login to send a message</h1>;\n  }\n\n  return (\n    <div className=\"h-auto w-11/12 bg-gray-350 rounded m-1 p-1\">\n      {displayedComponent}\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport Message from \"../message/Message\";\nimport { API } from \"../../UserApi\";\nexport default function InventoryItem({ inventoryItem, setisItemPreview }) {\n  const { authorizedUser } = useContext(UserContext);\n  const [messaging, setMessaging] = useState(false);\n  // checks if a inventory item was passed as a prop\n  let item;\n  if (inventoryItem) {\n    item = inventoryItem;\n  } else {\n    item = <h1>No item found in inventory item</h1>;\n  }\n\n  // checks if the item is a single item being listed\n  // or if it has multiple in stock\n  let singleOrMultiple;\n  if (item.itemsInStock > 1) {\n    singleOrMultiple = item.itemsInStock;\n  } else {\n    singleOrMultiple = \"\";\n  }\n\n  // checks if the item is a vehicle.\n  let layout;\n  if (item.itemYearCreated > 1) {\n    layout = (\n      <div className=\"flex justify-center  text-center flex-col rounded m-1 p-1  text-wrap\">\n        <div className=\"flex flex-row justify-center flex-wrap text-3xl \">\n          <h1 className=\"pl-1 pr-1 ml-1 mr-1\"> {item.itemYearCreated} </h1>\n          <h1 className=\"pl-1 pr-1 ml-1 mr-1\">{item.itemMake}</h1>\n          <h1 className=\"pl-1 pr-1 ml-1 mr-1\">{item.itemModel}</h1>\n        </div>\n        <div className=\"flex flex-col text-3xl justify-center\">\n          <h1 className=\"pl-1 pr-1 ml-1 mr-1\">${item.itemPrice}</h1>\n        </div>\n        <div className=\"flex flex-col justify-center text-2xl\">\n          <h1 className=\"font-bold\">Seller's Location</h1>\n          <h1 className=\"pl-1 pr-1 ml-1 mr-1\">{item.itemLocation}</h1>\n        </div>\n        <div className=\"flex flex-col justify-center text-2xl\">\n          <h1 className=\"font-bold\">Seller's Description</h1>\n          <h1 className=\"pl-1 pr-1 ml-1 mr-1\">{item.itemDescription}</h1>\n        </div>\n        <div className=\"flex  flex-col justify-center \">\n          <input\n            className=\"bg-transparent p-1 m-1 font-bold rounded border-2 border-blue-800 text-3xl\"\n            type=\"button\"\n            value=\"Leave a comment\"\n            onClick={(e) => {\n              e.preventDefault();\n              setMessaging(!messaging);\n            }}\n          />\n          <input\n            className=\"bg-transparent p-1 m-1 font-bold rounded border-2 border-blue-800 text-2xl\"\n            type=\"button\"\n            value=\"Save Vehicle\"\n            onClick={(e) => {\n              e.preventDefault();\n              alert(\"Vehicle Saved\");\n            }}\n          />\n          <input\n            className=\"bg-transparent p-1 m-1 font-bold rounded border-2 border-blue-800 text-xl\"\n            type=\"button\"\n            value=\"Share\"\n            onClick={(e) => {\n              e.preventDefault();\n              alert(\"Vehicle Shared\");\n            }}\n          />\n        </div>\n      </div>\n      // <h2>\n      //   ${item.itemPrice}\n      //   <br />\n      //   {item.itemYearCreated}\n      //   <br />\n      //   {item.itemMake}\n      //   <br />\n      //   {item.itemModel}\n      // </h2>\n    );\n  } else {\n    layout = (\n      <h2>\n        {item.itemName}\n        <br />${item.itemPrice} <br />\n        {singleOrMultiple}\n      </h2>\n    );\n  }\n  let message;\n  if (authorizedUser != null && messaging === true) {\n    message = <Message recieverUserId={item.itemUserId} itemId={item.itemId} />;\n  } else if (messaging === true) {\n    message = (\n      <div className=\"border-2 border-white rounded m-1 p-1\">\n        <h1>Please login to write a comment :)</h1>\n      </div>\n    );\n    // hide message seller and save vehicle input if the user isnt signed in.\n    // or just notify them they need to login.\n  }\n\n  let itemPic = `${API}/inventoryItems/images/${item.itemId}`;\n  return (\n    <div className=\"flex flex-col justify-start w-11/12 bg-blue-500 rounded m-1 p-1 text-white text-xl h-auto\">\n      <div\n        className=\"rounded m-1 p-1 \"\n        style={{\n          height: \"30vh\",\n          backgroundImage: \"url(\" + itemPic + \")\",\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n        onClick={() => {\n          setisItemPreview(false);\n        }}\n      ></div>\n      <div className=\"flex justify-evenly text-center items-center w-auto h-auto \">\n        {layout}\n      </div>\n      <div className=\"flex justify-evenly text-center items-center w-auto h-auto \">\n        {message}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport InventoryItem from \"./InventoryItem\";\nimport { API } from \"../../UserApi\";\nexport default function InventoryItemPreview({ inventoryItem }) {\n  const [isItemPreview, setisItemPreview] = useState(false);\n  // checks if a inventory item was passed as a prop\n  let item;\n  if (inventoryItem) {\n    item = inventoryItem;\n  } else {\n    item = <h1>No item found in inventory item</h1>;\n  }\n\n  // checks if the item is a single item being listed\n  // or if it has multiple in stock\n  let singleOrMultiple;\n  if (item.itemsInStock > 1) {\n    singleOrMultiple = item.itemsInStock;\n  } else {\n    singleOrMultiple = \"\";\n  }\n\n  // checks if the item is a vehicle.\n  let layout;\n  if (item.itemYearCreated > 1) {\n    layout = (\n      <h2>\n        ${item.itemPrice}\n        <br />\n        {item.itemYearCreated}\n        <br />\n        {item.itemMake}\n        <br />\n        {item.itemModel}\n      </h2>\n    );\n  } else {\n    layout = (\n      <h2>\n        {item.itemName}\n        <br />${item.itemPrice} <br />\n        {singleOrMultiple}\n      </h2>\n    );\n  }\n  let itemPic = `${API}/inventoryItems/images/${item.itemId}`;\n  let isPreview;\n  if (isItemPreview) {\n    return (isPreview = (\n      <div className=\" w-screen flex justify-center\">\n        <InventoryItem\n          key={item._id}\n          inventoryItem={item}\n          setisItemPreview={setisItemPreview}\n        />\n      </div>\n    ));\n  } else {\n    return (\n      <div\n        className=\"flex flex-row justify-evenly w-screen bg-blue-500 rounded m-1 p-1 text-white text-xl h-40\"\n        onClick={() => {\n          setisItemPreview(!isItemPreview);\n        }}\n      >\n        <div\n          className=\"w-64 \"\n          style={{\n            backgroundImage: \"url(\" + itemPic + \")\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n          }}\n        ></div>\n        <div className=\"flex justify-center text-center items-center w-1/2\">\n          {layout}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useContext, useState, useEffect } from \"react\";\n// import \"../styles/account.css\";\nimport { UserContext } from \"../../../UserContext\";\nimport UpdateAccount from \"./UpdateAccount\";\nimport { API } from \"../../../UserApi\";\nimport InventoryItemPreview from \"../../buy/InventoryItemPreview\";\nexport default function Account({ view }) {\n  const americanFlagPic =\n    \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\";\n  const { authorizedUser } = useContext(UserContext);\n  const [isUpdating, setisUpdating] = useState(false);\n  const [isLoading, setisLoading] = useState(true);\n  const [inventoryItems, setinventoryItems] = useState();\n\n  // fetches all inventory items from the react-store database\n  let getInventoryItemsFromApi = () => {\n    fetch(`${API}/inventoryItems/findOwnUserItems/${authorizedUser.userId}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        // sets the data from database to inventory items\n        setinventoryItems(data);\n        setisLoading(false);\n      });\n  };\n  useEffect(() => {\n    getInventoryItemsFromApi();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoading]);\n\n  // inventory items to be displayed.\n  let items = [];\n  // checks if data was recieved from the database.\n  if (\n    inventoryItems != null &&\n    inventoryItems !== undefined &&\n    inventoryItems.length > 0\n  ) {\n    inventoryItems.map((item) => {\n      return items.push(\n        //   adjusts width of each element here\n        <div className=\"flex \" key={item._id}>\n          <InventoryItemPreview key={item._id} inventoryItem={item} />{\" \"}\n        </div>\n      );\n    });\n  }\n\n  if (isLoading) {\n    return <h1>Loading...</h1>;\n  }\n  // Account should show certain info depending on a \"view variable passed to it\".\n  // if the user looks at their own account, all should be visable.\n  // if a user is looking at somebody elses account,\n  // (from a item/blog/picture etc posting.) only some info should be visable\n\n  let displayedUser;\n  if (authorizedUser && view === \"authorized\" && !isUpdating) {\n    displayedUser = (\n      // create a good looking account view\n      <div\n        className=\"flex justify-start flex-col flex-wrap text-white\"\n        // style={{\n        //   backgroundImage: \"url(\" + americanFlagPic + \")\",\n        //   backgroundPosition: \"center\",\n        //   backgroundSize: \"cover\",\n        //   backgroundRepeat: \"no-repeat\",\n        // }}\n      >\n        <div\n          className=\"flex flex-row justify-around m-1 p-2 h-40\"\n          // style={{\n          //   backgroundImage:\n          //     \"url(\" +\n          //     \"https://images.unsplash.com/photo-1603413954143-f8203e60bfe9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=700&q=80\" +\n          //     \")\",\n          //   backgroundPosition: \"center\",\n          //   backgroundSize: \"cover\",\n          //   backgroundRepeat: \"no-repeat\",\n          // }}\n        >\n          <img\n            className=\"h-32 m-4 rounded-2xl\"\n            src={`${API}/users/profilePics/${authorizedUser.userId}`}\n            alt=\"temp profile img\"\n          />\n          <div className=\"flex flex-col justify-center font-bold\">\n            <div>\n              <h2 className=\"italic text-3xl\">@{authorizedUser.username}</h2>\n            </div>\n            <input\n              className=\"m-1 p-1 bg-transparent border-2 border  rounded\"\n              value=\"Edit Profile\"\n              type=\"button\"\n              onClick={() => {\n                setisUpdating(true);\n              }}\n            ></input>\n          </div>\n        </div>\n\n        {/* bottom half  */}\n        <div className=\"flex flex-col justify-center text-start m-1 p-2  rounded h-auto\">\n          <h1 className=\"font-bold text-3xl\">\n            {authorizedUser.firstName} {authorizedUser.lastName}\n          </h1>\n          <h3 className=\"font-bold text-xl \">\n            {authorizedUser.city},{authorizedUser.state}\n          </h3>\n          <h4 className=\"text-lg mt-2\">{authorizedUser.userBio}</h4>\n        </div>\n        <div className=\"flex flex-col justify-center text-center bg-gray-350 m-3 rounded text-3xl  \">\n          <button className=\"rounded-lg m-2 p-2 bg-gray-350\">\n            <a href=\"/sell\">Create a listing here.</a>\n          </button>\n        </div>\n      </div>\n    );\n  } else if (authorizedUser && view === \"un-authorized\") {\n    const publicInfo = {\n      username: authorizedUser.username,\n      email: authorizedUser.email,\n      phone: authorizedUser.phone,\n    };\n    displayedUser = (\n      <div className=\"user\">\n        <h2>\n          {publicInfo.username} <br /> {publicInfo.email} <br />{\" \"}\n          {publicInfo.phone}{\" \"}\n        </h2>\n      </div>\n    );\n  } else if (authorizedUser && view === \"authorized\" && isUpdating) {\n    displayedUser = (\n      <div className=\"updateAccount\">\n        <UpdateAccount setisUpdating={setisUpdating} />\n      </div>\n    );\n  } else {\n    displayedUser = (\n      <div className=\"user\">\n        <h2>No User was found in Account.js</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\" flex flex-col h-screen\"\n      style={{\n        backgroundImage: \"url(\" + americanFlagPic + \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <div>{displayedUser}</div>\n      <div className=\" flex flex-col h-auto\">{items}</div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport \"../styles/login.css\";\nimport { loginUser } from \"../../../UserApi\";\nimport { saveUserToSessionStorage } from \"../../../SessionStorageApi\";\nimport { UserContext } from \"../../../UserContext\";\nimport useForm from \"../../../utils/useForm\";\n\nexport default function Login() {\n  const initialState = {\n    username: \"\",\n    password: \"\",\n  };\n\n  // username and password the user has entered in form below\n  const [values, handleChange] = useForm(initialState);\n\n  // sets if the user has been authorized/verified to the app level context\n  const { setAuthorizedUser } = useContext(UserContext);\n\n  // inits after the login form below is submitted.\n  const login = async (e) => {\n    // prevents page from refreshing\n    e.preventDefault();\n    // sets loginStatus as a promise from the UserApis' loginUser function.\n    let loginStatus = await loginUser(values);\n    // saves user to session storage\n    await saveUserToSessionStorage(loginStatus);\n    // sets the authorized user for the entire app.\n    await setAuthorizedUser(loginStatus);\n  };\n\n  // User login form. Sets username and password states when changed.\n  return (\n    <div\n      className=\" rounded text-2xl text-white flex justify-center content-center items-center text-center h-screen flex-col align-middle\"\n      style={{\n        backgroundImage:\n          \"url(\" +\n          \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" +\n          \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <form className=\"p-6 \" onSubmit={login}>\n        <div>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            className=\"py-4 m-2 bg-gray-350 rounded\"\n            type=\"username\"\n            name=\"username\"\n            value={values.username || \"\"}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            className=\"py-4 m-2 bg-gray-350 rounded\"\n            type=\"password\"\n            name=\"password\"\n            value={values.password || \"\"}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            className=\"bg-gray-350 hover:bg-blue-500 rounded px-10 py-4 m-2\"\n          ></input>\n        </div>\n        <div>\n          <a\n            className=\"text-xl text-blue-500 bg-gray-350 rounded p-2 m-2\"\n            href=\"/createAccount\"\n          >\n            Create A New Account\n          </a>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Account from \"./Account\";\n\nimport Login from \"./Login\";\nimport { UserContext } from \"../../../UserContext\";\n\nexport default function AccountManager() {\n  const { authorizedUser } = useContext(UserContext);\n\n  let displayedAccountPage;\n  if (authorizedUser) {\n    displayedAccountPage = <Account view={\"authorized\"} />;\n  } else {\n    displayedAccountPage = <Login />;\n  }\n\n  return <div>{displayedAccountPage}</div>;\n}\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../../UserContext\";\nimport \"../styles/homeWelcome.css\";\nexport default function HomeWelcome() {\n  const { authorizedUser } = useContext(UserContext);\n\n  let displayedWelcome;\n  if (authorizedUser) {\n    displayedWelcome = (\n      <div className=\"content-center flex flex-col align-middle justify-center items-center\">\n        <h1>Welcome</h1>\n        <h1> {authorizedUser.username}!</h1>\n      </div>\n    );\n  } else {\n    displayedWelcome = (\n      <div className=\"content-center flex flex-col align-middle justify-center items-center\">\n        <h1>Welcome!</h1>\n      </div>\n    );\n  }\n\n  const americanFlagPic =\n    \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\";\n  return (\n    <div\n      className=\"flex flex-col align-middle justify-center h-screen text-white text-4xl font-bold\"\n      style={{\n        backgroundImage: \"url(\" + americanFlagPic + \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      {displayedWelcome}\n    </div>\n  );\n}\n","import React from \"react\";\nimport HomeWelcome from \"./HomeWelcome\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <HomeWelcome />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Home from \"./Home\";\n// import HomeFooter from \"./HomeFooter\";\n// import HomeMain from \"./HomeMain\";\nexport default function HomeManager() {\n  return (\n    <div>\n      <Home />\n      {/* <HomeMain />\n      <HomeFooter /> */}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport InventoryItemPreview from \"./InventoryItemPreview\";\n\nexport default function Inventory({ category }) {\n  const [isLoading, setisLoading] = useState(true);\n  const [inventoryItems, setinventoryItems] = useState();\n  const americanFlagPic =\n    \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\";\n  // fetches all inventory items from the react-store database\n  let getInventoryItemsFromApi = () => {\n    fetch(\n      `https://react-store-node-api.herokuapp.com/inventoryItems/items/${category}`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        // sets the data from database to inventory items\n        setinventoryItems(data);\n        setisLoading(false);\n      });\n  };\n  useEffect(() => {\n    getInventoryItemsFromApi();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoading, category]);\n\n  // inventory items to be displayed.\n  let items = [];\n  // checks if data was recieved from the database.\n  if (\n    inventoryItems != null &&\n    inventoryItems !== undefined &&\n    inventoryItems.length > 0\n  ) {\n    inventoryItems.map((item) => {\n      return items.push(\n        //   adjusts width of each element here\n        <div className=\"flex \" key={item._id}>\n          <InventoryItemPreview key={item._id} inventoryItem={item} />{\" \"}\n        </div>\n      );\n    });\n  } else {\n    return (\n      <div\n        className=\"flex h-screen flex-col justify-around align-middle text-3xl text-white \"\n        style={{\n          backgroundImage: \"url(\" + americanFlagPic + \")\",\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <h1 className=\"m-1 p-1\">No items found. Please list a item.</h1>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  //   MAKE THIS UTILIZE GRID AND LOOK LIKE FACEBOOK MARKETPLACE.\n  return (\n    <div\n      className=\" flex flex-col h-screen \"\n      style={{\n        backgroundImage: \"url(\" + americanFlagPic + \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      {items}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Inventory from \"./Inventory\";\n\nexport default function CategoryManager() {\n  const [selectedCategory, setselectedCategory] = useState(\n    <Inventory category={\"car\"} />\n  );\n\n  const americanFlagPic =\n    \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\";\n\n  return (\n    <div>\n      <div\n        className=\"flex flex-row bg-gray-350 justify-around text-white text-xl\"\n        style={{\n          backgroundImage: \"url(\" + americanFlagPic + \")\",\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <input\n          className=\"m-1 p-1 bg-gray-350 border-2 border  rounded\"\n          type=\"button\"\n          value=\"Cars\"\n          onClick={(Event) => {\n            setselectedCategory(<Inventory category={\"car\"} />);\n          }}\n        />\n        <input\n          className=\"m-1 p-1 bg-gray-350 border-2 border  rounded\"\n          type=\"button\"\n          value=\"Trucks\"\n          onClick={(Event) => {\n            setselectedCategory(<Inventory category={\"truck\"} />);\n          }}\n        />\n        <input\n          className=\"m-1 p-1 bg-gray-350 border-2 border  rounded\"\n          type=\"button\"\n          value=\"Parts\"\n          onClick={(Event) => {\n            setselectedCategory(<Inventory category={\"parts\"} />);\n          }}\n        />\n      </div>\n      <div>{selectedCategory}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CategoryManager from \"./CategoryManager\";\n\nexport default function BuyManager() {\n  return (\n    <div>\n      <CategoryManager />\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport \"../styles/createAccount.css\";\nimport Account from \"./Account\";\nimport { UserContext } from \"../../../UserContext\";\nimport { createUser } from \"../../../UserApi\";\nimport useForm from \"../../../utils/useForm\";\n// The user should be able to create a single account,\n//  the user shouldn't be able to create a account if a account with\n//  the same username, email, or phone number already exists.\n//   Username,email,or phone should be autodetected.\n//    If the username already exists, the user should be suggested to try another.\n//     If the email already exists, the user should be suggested to login.\n//      If the phone number is already in use, the user should be asked to login.\nexport default function CreateAccount() {\n  const { authorizedUser, setAuthorizedUser } = useContext(UserContext);\n  const [profilePic, setprofilePic] = useState(null);\n  const [values, handleChange] = useForm();\n\n  const register = async (e) => {\n    e.preventDefault();\n    let createStatus = await createUser(values, profilePic);\n    setAuthorizedUser(createStatus);\n  };\n\n  let createAccountForm = (\n    <div\n      className=\"flex flex-col justify-center text-white text-center align-center p-4 text-xl \"\n      style={{\n        backgroundImage:\n          \"url(\" +\n          \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" +\n          \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <form className=\"flex flex-col text-center text-2xl\" onSubmit={register}>\n        <h1 className=\"text-4xl font-bold\">Create Account</h1>\n        <label htmlFor=\"profilePic\">Profile picture</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          name=\"profilePic\"\n          multiple\n          type=\"file\"\n          accept=\".jpg\"\n          onChange={(Event) => {\n            const file = Event.target.files[0];\n            setprofilePic(file);\n          }}\n        ></input>\n\n        <label htmlFor=\"username\">Username</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"username\"\n          name=\"username\"\n          value={values.username || \"\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"password\"\n          name=\"password\"\n          value={values.password || \"\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"firstName\">First name</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"firstName\"\n          name=\"firstName\"\n          value={values.firstName || \"\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"lastName\">Last name</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"lastName\"\n          name=\"lastName\"\n          value={values.lastName || \"\"}\n          onChange={handleChange}\n        />\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"email\"\n          name=\"email\"\n          value={values.email || \"\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"phone\">Phone</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"phone\"\n          name=\"phone\"\n          value={values.phone || \"\"}\n          onChange={handleChange}\n        />\n        {/* new below */}\n        <label htmlFor=\"userBio\">Bio</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"userBio\"\n          name=\"userBio\"\n          value={values.userBio || \"\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"streetAddress\">Street Address</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"streetAddress\"\n          name=\"streetAddress\"\n          value={values.streetAddress || \"\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"city\">City</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"city\"\n          name=\"city\"\n          value={values.city || \"\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"state\">State</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"state\"\n          name=\"state\"\n          value={values.state || \"\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"zipCode\">Zip</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"zipCode\"\n          name=\"zipCode\"\n          value={values.zipCode || \"\"}\n          onChange={handleChange}\n        />\n        <input\n          className=\"bg-blue-500 p-1 my-4 rounded\"\n          type=\"submit\"\n          value=\"Create Account\"\n        />\n      </form>\n    </div>\n  );\n\n  let displayedComponent;\n\n  if (!authorizedUser) {\n    displayedComponent = createAccountForm;\n  } else {\n    displayedComponent = <Account view={\"authorized\"} />;\n  }\n\n  return <div>{displayedComponent}</div>;\n}\n","import Axios from \"axios\";\nimport { API } from \"./UserApi\";\n\n// USE A USERID TO VERIFY THE USER WHEN SELLING A ITEM\n// need to append a body to the request post\nexport const createNewInventoryItem = async (\n  itemInfo,\n  userId,\n  password,\n  itemCategory,\n  itemImage\n) => {\n  try {\n    const newItem = await new FormData();\n    newItem.append(\"itemName\", itemInfo.itemName);\n    newItem.append(\"itemPrice\", itemInfo.itemPrice);\n    newItem.append(\"itemCategory\", itemCategory.toLowerCase().trim());\n    newItem.append(\"itemPartNumber\", itemInfo.itemPartNumber);\n    newItem.append(\"itemLocation\", itemInfo.itemLocation.trim());\n    newItem.append(\"itemsInStock\", itemInfo.itemsInStock);\n    newItem.append(\"itemDescription\", itemInfo.itemDescription);\n    newItem.append(\"itemYearCreated\", itemInfo.itemYearCreated);\n    newItem.append(\"itemMake\", itemInfo.itemMake);\n    newItem.append(\"itemModel\", itemInfo.itemModel);\n    newItem.append(\"itemId\", itemInfo.itemId);\n    newItem.append(\"itemImage\", itemImage);\n    await Axios.post(\n      `${API}/inventoryItems/createNewItem/${userId}/${password}`,\n      newItem\n    ).then(async (response) => {\n      return response;\n    });\n  } catch (error) {\n    return console.log(\"Invetory item create new item api error\");\n  }\n};\n","import React, { useContext, useState } from \"react\";\nimport useForm from \"../../utils/useForm\";\nimport { createNewInventoryItem } from \"../../InventoryItemApi\";\nimport { UserContext } from \"../../UserContext\";\nimport Login from \"../account/components/Login\";\nexport default function Sell() {\n  const [itemCategory, setItemCategory] = useState(null);\n\n  const americanFlagPic =\n    \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\";\n  const { authorizedUser } = useContext(UserContext);\n  const initialValues = {\n    itemName: \"Test name\",\n    itemPrice: 123,\n    itemPartNumber: 123,\n    itemLocation: \"Test location\",\n    itemsInStock: 123,\n    itemDescription: \"Test description\",\n    itemYearCreated: 123,\n    itemMake: \"Test Make\",\n    itemModel: \"Test model\",\n    // WHEN USING USER ID AS A ITEM MARKER, MULTIPLE ITEMS HAVE THE SAME NUMBER\n    // each item now includes the user id and its own item id.\n    itemId: Date.now(),\n  };\n\n  const [values, handleChange] = useForm(initialValues);\n  const [itemPicture, setItemPicture] = useState(null);\n\n  const sellItem = (e) => {\n    e.preventDefault();\n    createNewInventoryItem(\n      values,\n      authorizedUser.userId,\n      authorizedUser.password,\n      itemCategory,\n      itemPicture\n    );\n  };\n\n  if (!authorizedUser) {\n    return (\n      <div\n        className=\"flex h-screen flex-col justify-center align-middle text-3xl text-white  \"\n        style={{\n          backgroundImage: \"url(\" + americanFlagPic + \")\",\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <button className=\"rounded-lg m-2 p-2 bg-gray-350\">\n          <a href=\"/account\">\n            Must have a account to sell, Please login or create one.\n          </a>\n        </button>\n        <Login />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\"flex flex-col justify-center text-white text-center align-center p-4 text-xl \"\n      style={{\n        backgroundImage:\n          \"url(\" +\n          \"https://images.unsplash.com/photo-1603417406253-4c65c06974c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" +\n          \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <form className=\"flex flex-col text-center text-2xl \" onSubmit={sellItem}>\n        <h1 className=\"text-4xl font-bold\">Sell Here</h1>\n        <br />\n        <label htmlFor=\"itemPicture\">Item Pictures</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          name=\"itemPicture\"\n          multiple\n          type=\"file\"\n          accept=\".jpg\"\n          onChange={(Event) => {\n            const file = Event.target.files[0];\n            setItemPicture(file);\n          }}\n        ></input>\n        <br />\n        {/* radio input for category */}\n        <label htmlFor=\"itemCategoryDiv\">Item Category</label>\n        <div\n          className=\"bg-gray-350 rounded text-center m-1 p-1\"\n          name=\"itemCategoryDiv\"\n        >\n          <label htmlFor=\"car\" className=\"m-1 p-1\">\n            Car\n          </label>\n          <input\n            type=\"radio\"\n            id=\"car\"\n            name=\"itemCategory\"\n            value=\"car\"\n            onChange={(Event) => {\n              const { value } = Event.target;\n              setItemCategory(value);\n            }}\n          />\n          <br />\n          <label htmlFor=\"truck\" className=\"m-1 p-1\">\n            Truck\n          </label>\n          <input\n            type=\"radio\"\n            id=\"truck\"\n            name=\"itemCategory\"\n            value=\"truck\"\n            onChange={(Event) => {\n              const { value } = Event.target;\n              setItemCategory(value);\n            }}\n          />\n          <br />\n          <label htmlFor=\"parts\" className=\"m-1 p-1\">\n            Parts\n          </label>\n          <input\n            type=\"radio\"\n            id=\"parts\"\n            name=\"itemCategory\"\n            value=\"parts\"\n            onChange={(Event) => {\n              const { value } = Event.target;\n              setItemCategory(value);\n            }}\n          />\n        </div>\n        <br />\n        <label htmlFor=\"itemName\">itemName</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"itemName\"\n          name=\"itemName\"\n          value={values.itemName || \"\"}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"itemDescription\">itemDescription</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"itemDescription\"\n          name=\"itemDescription\"\n          value={values.itemDescription || \"\"}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"itemPrice\">itemPrice</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"itemPrice\"\n          name=\"itemPrice\"\n          value={values.itemPrice || \"\"}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"itemPartNumber\">itemPartNumber</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"itemPartNumber\"\n          name=\"itemPartNumber\"\n          value={values.itemPartNumber || \"\"}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"itemsInStock\">itemsInStock</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"itemsInStock\"\n          name=\"itemsInStock\"\n          value={values.itemsInStock || \"\"}\n          onChange={handleChange}\n        ></input>\n        <br />\n        <label htmlFor=\"itemLocation\">itemLocation</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          type=\"itemLocation\"\n          name=\"itemLocation\"\n          value={values.itemLocation || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <label htmlFor=\"itemYearCreated\">itemYearCreated</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"itemYearCreated\"\n          name=\"itemYearCreated\"\n          value={values.itemYearCreated || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <label htmlFor=\"itemMake\">itemMake</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"itemMake\"\n          name=\"itemMake\"\n          value={values.itemMake || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <label htmlFor=\"itemModel\">itemModel</label>\n        <input\n          className=\"bg-gray-350 rounded text-center p-1\"\n          required\n          type=\"itemModel\"\n          name=\"itemModel\"\n          value={values.itemModel || \"\"}\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          className=\"bg-blue-500 p-1 rounded\"\n          type=\"submit\"\n          value=\"Sell Item\"\n        ></input>\n        <br />\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport AccountManager from \"./routes/account/components/AccountManager\";\nimport HomeManager from \"./routes/home/components/HomeManager\";\nimport { UserContext } from \"./UserContext\";\nimport {\n  getUserFromSessionStorage,\n  removeUserFromSessionStorage,\n} from \"./SessionStorageApi\";\n// import useHamburger from \"./utils/useHamburger\";\nimport BuyManager from \"./routes/buy/BuyManager\";\nimport CreateAccount from \"./routes/account/components/CreateAccount\";\nimport UpdateAccount from \"./routes/account/components/UpdateAccount\";\nimport Login from \"./routes/account/components/Login\";\nimport Sell from \"./routes/sell/Sell\";\n// import Message from \"./routes/message/Message\";\n\nfunction App() {\n  // state of any authorized user is contained here.\n  const [authorizedUser, setAuthorizedUser] = useState(null);\n  const [navIsOpen, setNavIsOpen] = useState(false);\n  //\n\n  // memo for authorized user state\n  const userProvider = useMemo(() => ({ authorizedUser, setAuthorizedUser }), [\n    authorizedUser,\n    setAuthorizedUser,\n  ]);\n\n  useEffect(() => {\n    //  get session users on init\n    const getUserFromStorage = async () => {\n      let userFromServer = await getUserFromSessionStorage();\n      if (userFromServer) {\n        setAuthorizedUser(userFromServer);\n      }\n    };\n    getUserFromStorage();\n  }, []);\n\n  // set at 1 hour for build\n  const halfHour = 1800000 * 2;\n  // clear any user account after 30 minutes\n  // const halfHour = 1800000;\n  setTimeout(() => {\n    if (authorizedUser) {\n      removeUserFromSessionStorage(authorizedUser);\n      setAuthorizedUser(null);\n    } else {\n      console.log(\"30 mins -> no user to clear from storage\");\n    }\n  }, halfHour);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"bg-gray-350 \">\n          <div className=\"flex justify-between p-4 items-center  text-3xl  h-12 \">\n            <div>\n              <button\n                className=\"hover:bg-gray-600 text-white font-bold rounded\"\n                type=\"button\"\n              >\n                <Link className=\"\" to=\"/\">\n                  React JS\n                </Link>\n              </button>\n            </div>\n            <div>\n              <button\n                className=\"items-center flex focus:outline-none  \"\n                type=\"button\"\n                onClick={() => {\n                  setNavIsOpen(!navIsOpen);\n                }}\n              >\n                <img\n                  className=\"px-2 h-10 hover:bg-gray-600   rounded\"\n                  src=\"..//hamburger.jpg\"\n                  alt=\"menu\"\n                />\n              </button>\n            </div>\n          </div>\n          <div\n            className={\n              navIsOpen\n                ? \"text-4xl text-white text-center flex-col items-center px-2 pb-4\"\n                : \"hidden\"\n            }\n          >\n            <Link\n              className=\"block hover:bg-gray-600 rounded px-2\"\n              to=\"/\"\n              onClick={() => {\n                setNavIsOpen(!navIsOpen);\n              }}\n            >\n              Home\n            </Link>\n            <Link\n              className=\"block hover:bg-gray-600 rounded px-2 mt-1\"\n              to=\"/buy\"\n              onClick={() => {\n                setNavIsOpen(!navIsOpen);\n              }}\n            >\n              Buy\n            </Link>\n            <Link\n              className=\"block hover:bg-gray-600 rounded px-2 mt-1\"\n              to=\"/sell\"\n              onClick={() => {\n                setNavIsOpen(!navIsOpen);\n              }}\n            >\n              Sell\n            </Link>\n            <Link\n              className=\"block hover:bg-gray-600 rounded px-2 m-1\"\n              to=\"/account\"\n              onClick={() => {\n                setNavIsOpen(!navIsOpen);\n              }}\n            >\n              {authorizedUser ? \"Account\" : \"Login\"}\n            </Link>\n\n            <Link\n              className={\n                authorizedUser\n                  ? \"block bg-red-700 hover:bg-red-600 rounded px-2 m-1\"\n                  : \"hidden\"\n              }\n              to=\"/account\"\n              onClick={() => {\n                removeUserFromSessionStorage(authorizedUser);\n                setAuthorizedUser(null);\n              }}\n            >\n              Logout\n            </Link>\n          </div>\n        </header>\n        {/* <div className=\"\">\n          <ul className=\"\">\n            <Link className=\"\" to=\"/\">\n              Home\n            </Link>\n            <Link className=\"\" to=\"/buy\">\n              Buy\n            </Link>\n            <Link className=\"\" to=\"/sell\">\n              Sell\n            </Link>\n            <Link className=\"\" to=\"/account\">\n              Account\n            </Link>\n          </ul>\n        </div> */}\n        <UserContext.Provider value={userProvider}>\n          <Route exact path=\"/\" render={() => <HomeManager />} />\n          <Route exact path=\"/buy\" render={() => <BuyManager />} />\n          <Route exact path=\"/sell\" render={() => <Sell />} />\n          <Route exact path=\"/account\" render={() => <AccountManager />} />\n          <Route exact path=\"/createAccount\" render={() => <CreateAccount />} />\n          <Route exact path=\"/updateAccount\" render={() => <UpdateAccount />} />\n          <Route exact path=\"/login\" render={() => <Login />} />\n          {/* <Route exact path=\"/message\" render={() => <Message />} /> */}\n        </UserContext.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}